[project]
dependencies = [
  "dotprompt",
  "genkit",
  "genkit-chroma-plugin",
  "genkit-firebase-plugin",
  "genkit-google-ai-plugin",
  "genkit-google-cloud-plugin",
  "genkit-ollama-plugin",
  "genkit-pinecone-plugin",
  "genkit-vertex-ai-plugin",
  "handlebarz",
]
description = "Workspace for Genkit packages"
license = { text = "Apache-2.0" }
name = "genkit-workspace"
readme = "README.md"
requires-python = ">=3.12"
version = "0.1.0"

[dependency-groups]
dev = [
  "bpython>=0.25",
  "ipython>=8.31.0",
  "jupyter>=1.1.1",
  "pytest-asyncio>=0.25.2",
  "pytest>=8.3.4",
  "pytest-cov>=6.0.0",
  "datamodel-code-generator>=0.26.5",
]
lint = ["mypy>=1.14.1", "ruff>=0.9.2"]

[tool.hatch.build.targets.wheel]
packages = []

[tool.setuptools]
py-modules = []

# Pytest for unit testing and coverage.
[tool.pytest]
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "strict"
python_files = [
  "packages/**/*_test.py",
  "plugins/**/*_test.py",
  "samples/**/*_test.py",
]
testpaths = ["packages", "plugins", "samples"]

[tool.pytest.ini_options]
addopts = "--cov"

[tool.coverage.report]
fail_under = 70

# uv based package management.
[tool.uv]
default-groups = ["dev", "lint"]

[tool.uv.sources]
dotprompt                  = { workspace = true }
genkit                     = { workspace = true }
genkit-chroma-plugin       = { workspace = true }
genkit-firebase-plugin     = { workspace = true }
genkit-google-ai-plugin    = { workspace = true }
genkit-google-cloud-plugin = { workspace = true }
genkit-ollama-plugin       = { workspace = true }
genkit-pinecone-plugin     = { workspace = true }
genkit-vertex-ai-plugin    = { workspace = true }
handlebarz                 = { workspace = true }
hello                      = { workspace = true }

[tool.uv.workspace]
members = ["packages/*", "plugins/*", "samples/*"]

# Ruff checks and formatting.
[tool.ruff]
indent-width = 4
line-length  = 80

[tool.ruff.format]
line-ending = "lf"
quote-style = "single"

# Static type checking.
[tool.mypy]
disallow_incomplete_defs = true
disallow_untyped_defs    = true
warn_unused_configs      = true

[tool.datamodel-codegen]
#strict-types = ["str", "int", "float", "bool", "bytes"] # Don't use; produces StrictStr, StrictInt, etc.
#collapse-root-models = true # Don't use; produces Any as types.
disable-timestamp        = true
enable-version-header    = true
field-constraints        = true
input                    = "../genkit-tools/genkit-schema.json"
input-file-type          = "jsonschema"
output                   = "packages/genkit/src/genkit/core/schemas.py"
output-model-type        = "pydantic_v2.BaseModel"
strict-nullable          = true
target-python-version    = "3.12"
use-schema-description   = true
use-standard-collections = true
use-union-operator       = true
